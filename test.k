(include "overture.ss")

(fun (joe ['x . 'xs]) (Poo 'xs (Cons 'x [C D])))

(fun (main)
     (all-true
      [
       (== (var? Nil)  False)
       (== (data? Nil) True)
       (== (app? Nil) False)
       (== (var? 'a) True)
       (== (data? 'a) False)
       (== (app? 'a) False)
       (== (var? ['a]) False)
       (== (data? ['a]) False)
       (== (app? ['a]) True)
       (== (map swap (Cons (P A B) (Cons (P C D) Nil))) (Cons (P B A) (Cons (P D C) Nil)))
       (== (map swap [(P A B) (P C D)]) [(P B A) (P D C)])
       (== (if False Yes No) No)
       (== (if True Yes No) Yes)
       (== (if (== [a] [a]) Yes No) Yes)
       (== (if (== [a] [b]) Yes No) No)
       (== (allargs A B C) (Jerk (A B C)))
       (== (foldr cons Nil [A B C]) [A B C])
       (== (joe [A B C]) (Poo [B C] [A C D]))
       ]))
