+ ((/. (x) x) Nil)
=> Nil
+ ((/. ((P j k)) j) (P 10 20))
=> 10
+ ((/. ((P j k)) k) (P 10 20))
=> 20
+ ((/. ((P (P j jj) (P k r))) j) (P (P 10 100) (P 20 30)))
=> 10
+ ((/. ((P (P j jj) (P k r))) jj) (P (P 10 100) (P 20 30)))
=> 100
+ ((/. ((P (P j jj) (P k r))) k) (P (P 10 100) (P 20 30)))
=> 20
+ ((/. ((P (P j jj) (P k r))) r) (P (P 10 100) (P 20 30)))
=> 30
+ ((/. ((P j (P k r))) j) (P 10 (P 20 30)))
=> 10
+ ((/. ((P j (P k r))) k) (P 10 (P 20 30)))
=> 20
+ ((/. ((P j (P k r))) r) (P 10 (P 20 30)))
=> 30
+ ((/. ((P (P j jj) q)) j) (P (P 10 100) 20))
=> 10
+ ((/. ((P (P j jj) q)) jj) (P (P 10 100) 20))
=> 100
+ ((/. ((P (P j jj) q)) q) (P (P 10 100) 20))
=> 20
+ ((/. (x) x) 1)
=> 1
+ ((/. (x) (x 2)) (/. x x))
=> (P 2 Nil)
+ ((/. (x) (x 2)) (/. (x) x))
=> 2
+ (/. (r) r)
=> ($ (/. b1480 ((/. b532 (((if (pair? b532)) (((if ((== (cdr b532)) (quote Nil))) (car b532)) TOPFAIL)) TOPFAIL)) b1480)) ())
+ ((/. (r) r) 3)
=> 3
+ ((+ 10) 20)
=> 30
+ ((+ ((/. (x) x) 2000)) 3000)
=> 5000
+ ((== 30) 30)
=> True
+ ((== 30) 40)
=> False
+ (((if True) 100) 200)
=> 100
+ (((if False) 100) 200)
=> 200
+ (tuct 10)
=> 10
+ ((+ 20) (tuct 10))
=> 30
+ ((- 40) 15)
=> 25
+ ((* 10) 20)
=> 200
+ (((if ((== 0) 3)) True) False)
=> False
+ (((if ((== 0) 0)) True) False)
=> True
+ ((/. (n) (((if ((== n) 3)) True) False)) 3)
=> False
+ ((/. (n) (((if ((== n) 3)) True) False)) 0)
=> False
+ (((if ((== 0) 0)) ((* 10) 20)) ((* 30) 40))
=> 200
+ (((if ((== 3) 0)) ((* 10) 20)) ((* 30) 40))
=> 1200
+ ((/. (n) (((if ((== n) 0)) 1) ((* n) ((- n) 1)))) 3)
=> 6
+ ((cons 1) 2)
=> (P 1 2)
+ (car ((cons 1) 2))
=> 1
+ (cdr ((cons 1) 2))
=> 2
+ (pair? ((cons 1) 2))
=> True
+ (pair? (car ((cons 1) 2)))
=> True
+ (pair? (cdr ((cons 1) 2)))
=> True
+ (double 10)
=> 20
+ (ones Nil)
=> Nil
+ (ones (P 1 Nil))
=> (P (P 1 1) Nil)
+ (ones (P 1 (P 2 (P 3 Nil))))
=> (P (P 1 1) (P (P 1 2) (P (P 1 3) Nil)))
+ ((map double) (P 1 (P 2 (P 3 Nil))))
=> (P 2 (P 4 (P 6 Nil)))
+ ((map double) 1)
=> 1
+ ((/. (a . b) a) 1 . 2)
=> 1
+ (voo 1 2 . 3)
=> 5
+ (/. x x)
=> ($ (/. b1560 ((/. b602 b602) b1560)) ())
+ ((/. x x) 1)
=> (P 1 Nil)
+ ((/. (a . b) 1) 10 . 20)
=> 1
+ ((/. (a . b) a) 10 . 20)
=> 10
+ ((/. (a . b) b) 10 . 20)
=> 20
+ ((/. (a . b) ((+ a) b)) 10 . 20)
=> 30
+ (voo2 double 1 . Nil)
=> (P 20 Nil)
+ (voo2 double . Nil)
=> Nil
+ ((/. (f a . b) b) 1000 1 . 2)
=> 2
+ ((/. (a . b) a) 1 . 2)
=> 1
+ (map2 double (P 1 (P 2 (P 3 Nil))))
=> (P 2 (P 4 (P 6 Nil)))
+ ((/. 1 2) . 1)
=> 2
+ ((/. (1) 2) 1)
=> 2
+ ((/./. (/. 1 100) (/. 2 200)) . 1)
=> 100
+ ((/./. (/. 1 100) (/. 2 200)) . 2)
=> 200
+ ((/./. (/. (1) 100) (/. (2) 200)) 1)
=> 100
+ ((/./. (/. (1) 100) (/. (2) 200)) 2)
=> 200
+ ((/. (Nil) Nil) Nil)
=> Nil
+ ((/. (quote joe) 1) quote joe)
=> 1
+ ((/. ((quote joe)) 1) (quote joe))
=> 1
+ ((/. (joe) joe) 1)
=> 1
+ ((/. (joe) 1) joee)
=> 1
+ ((/. (1 2) 40) 1 2)
=> 40
+ ((/. (a b) ((+ a) b)) 1 2)
=> 3
+ 1
=> 1
+ (/. x x)
=> ($ (/. b1832 ((/. b858 b858) b1832)) ())
+ ((/. x x) 1)
=> (P 1 Nil)
+ ((/. y ((/. x x) y)) 2)
=> (P (P 2 Nil) Nil)
+ (/. (a . b) a)
=> ($ (/. b1848 ((/. b874 (((if (pair? b874)) ((/. b (car b874)) (cdr b874))) TOPFAIL)) b1848)) ())
+ ((/. (a . b) a) 1 . 2)
=> 1
+ ((/. (a . b) b) 1 . 2)
=> 2
