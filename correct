+ ((/. (x) x) Nil)
=> Nil
+ ((/. ((PP j k)) j) (PP 10 20))
=> 10
+ ((/. ((PP j k)) k) (PP 10 20))
=> 20
+ ((/. ((PP (PP j jj) (PP k r))) j) (PP (PP 10 100) (PP 20 30)))
=> 10
+ ((/. ((PP (PP j jj) (PP k r))) jj) (PP (PP 10 100) (PP 20 30)))
=> 100
+ ((/. ((PP (PP j jj) (PP k r))) k) (PP (PP 10 100) (PP 20 30)))
=> 20
+ ((/. ((PP (PP j jj) (PP k r))) r) (PP (PP 10 100) (PP 20 30)))
=> 30
+ ((/. ((PP j (PP k r))) j) (PP 10 (PP 20 30)))
=> 10
+ ((/. ((PP j (PP k r))) k) (PP 10 (PP 20 30)))
=> 20
+ ((/. ((PP j (PP k r))) r) (PP 10 (PP 20 30)))
=> 30
+ ((/. ((PP (PP j jj) q)) j) (PP (PP 10 100) 20))
=> 10
+ ((/. ((PP (PP j jj) q)) jj) (PP (PP 10 100) 20))
=> 100
+ ((/. ((PP (PP j jj) q)) q) (PP (PP 10 100) 20))
=> 20
+ ((/. (x) x) 1)
=> 1
+ ((/. (x) (x 2)) (/. x x))
=> (P 2 Nil)
+ ((/. (x) (x 2)) (/. (x) x))
=> 2
+ (/. (r) r)
=> ($ (/. b1084 (((if (pair? b1084)) (((if ((== (cdr b1084)) (quote Nil))) (car b1084)) TOPFAIL)) TOPFAIL)) ())
+ ((/. (r) r) 3)
=> 3
+ ((+ 10) 20)
=> 30
+ ((+ ((/. (x) x) 2000)) 3000)
=> 5000
+ ((== 30) 30)
=> True
+ ((== 30) 40)
=> False
+ (((if True) 100) 200)
=> 100
+ (((if False) 100) 200)
=> 200
+ (tuct 10)
=> 10
+ ((+ 20) (tuct 10))
=> 30
+ ((- 40) 15)
=> 25
+ ((* 10) 20)
=> 200
+ (((if ((== 0) 3)) True) False)
=> False
+ (((if ((== 0) 0)) True) False)
=> True
+ ((/. (n) (((if ((== n) 3)) True) False)) 3)
=> False
+ ((/. (n) (((if ((== n) 3)) True) False)) 0)
=> False
+ (((if ((== 0) 0)) ((* 10) 20)) ((* 30) 40))
=> 200
+ (((if ((== 3) 0)) ((* 10) 20)) ((* 30) 40))
=> 1200
+ ((/. (n) (((if ((== n) 0)) 1) ((* n) ((- n) 1)))) 3)
=> 6
+ ((cons 1) 2)
=> (P 1 2)
+ (car ((cons 1) 2))
=> 1
+ (cdr ((cons 1) 2))
=> 2
+ (pair? ((cons 1) 2))
=> True
+ (pair? (car ((cons 1) 2)))
=> True
+ (pair? (cdr ((cons 1) 2)))
=> True
+ (double 10)
=> 20
+ (ones Nil)
=> Nil
+ (ones (PP 1 Nil))
=> (P (P PP (P 1 (P 1 Nil))) Nil)
+ (ones (PP 1 (PP 2 (PP 3 Nil))))
=> (P (P PP (P 1 (P 1 Nil))) (P (P PP (P 1 (P 2 Nil))) (P (P PP (P 1 (P 3 Nil))) Nil)))
+ ((map3 double) (PP 1 (PP 2 (PP 3 Nil))))
=> (P PP (P 2 (P (P PP (P 4 (P (P PP (P 6 (P Nil Nil))) Nil))) Nil)))
+ ((map3 double) 1)
=> 1
+ ((/. (a . b) a) 1 . 2)
=> 1
+ ((/. (a . b) b) 1 . 2)
=> 2
+ (voo 1 2 . 3)
=> 5
+ (/. x x)
=> ($ (/. b1164 ((/. x x) b1164)) ())
+ ((/. x x) 1)
=> (P 1 Nil)
+ ((/. (a . b) 1) 10 . 20)
=> 1
+ ((/. (a . b) a) 10 . 20)
=> 10
+ ((/. (a . b) b) 10 . 20)
=> 20
+ ((/. (a . b) ((+ a) b)) 10 . 20)
=> 30
+ (voo2 double 1 . Nil)
=> (P 20 Nil)
+ (voo2 double . Nil)
=> Nil
+ ((/. (f a . b) b) 1000 1 . 2)
=> 2
+ ((/. (a . b) a) 1 . 2)
=> 1
+ (map2 double (PP 1 (PP 2 (PP 3 Nil))))
=> (P PP (P 2 (P (P PP (P 4 (P (P PP (P 6 (P Nil Nil))) Nil))) Nil)))
+ ((/. 1 2) . 1)
=> 2
+ ((/. (1) 2) 1)
=> 2
+ ((/./. (/. 1 100) (/. 2 200)) . 1)
=> 100
+ ((/./. (/. 1 100) (/. 2 200)) . 2)
=> 200
+ ((/./. (/. (1) 100) (/. (2) 200)) 1)
=> 100
+ ((/./. (/. (1) 100) (/. (2) 200)) 2)
=> 200
+ ((/. (quote joe) 1) quote joe)
=> 1
+ ((/. ((quote joe)) 1) (quote joe))
=> 1
+ ((/. (joe) joe) 1)
=> 1
+ ((/. (joe) 1) joee)
=> 1
+ ((/. (1 2) 40) 1 2)
=> 40
+ ((/. (a b) ((+ a) b)) 1 2)
=> 3
+ 1
=> 1
+ (/. x x)
=> ($ (/. b1410 ((/. x x) b1410)) ())
+ ((/. x x) 1)
=> (P 1 Nil)
+ ((/. y ((/. x x) y)) 2)
=> (P (P 2 Nil) Nil)
+ (/. (a . b) a)
=> ($ (/. b1426 (((if (pair? b1426)) ((/. b (car b1426)) (cdr b1426))) TOPFAIL)) ())
+ ((/. (a . b) a) 1 . 2)
=> 1
+ ((/. (a . b) b) 1 . 2)
=> 2
+ (Foo 1 2)
=> (P Foo (P 1 (P 2 Nil)))
+ ((/. ((Foo a b)) a) (Foo 10 20))
=> 10
+ ((/. ((Foo a b)) b) (Foo 10 20))
=> 20
+ ((/. ((Foo a b)) ((+ a) b)) (Foo 10 20))
=> 30
+ ((/. ((Foo (Bar a) b)) a) (Foo (Bar 10) 20))
=> 10
+ ((/. ((Foo (Bar a) b)) b) (Foo (Bar 10) 20))
=> 20
+ ((/. ((Foo (Bar a) b)) ((+ a) b)) (Foo (Bar 10) 20))
=> 30
+ ((/. ((Foo a b)) a) (Foo (Bar 10) 20))
=> (P Bar (P 10 Nil))
+ ((/. ((Foo a b)) b) (Foo (Bar 10) 20))
=> 20
+ (ones2 Nil)
=> Nil
+ (ones2 (PP 1 Nil))
=> (P (P PP (P 1 (P 1 Nil))) Nil)
+ (ones2 (PP 1 (PP 2 (PP 3 Nil))))
=> (P (P PP (P 1 (P 1 Nil))) (P (P PP (P 1 (P 2 Nil))) (P (P PP (P 1 (P 3 Nil))) Nil)))
+ (voo20 1 2 . 3)
=> 5
+ (voo20 1 . 10)
=> 10
+ (voo22 double 1 . Nil)
=> (P 20 Nil)
+ (voo22 double . Nil)
=> Nil
+ (map22 double (PP 1 (PP 2 (PP 3 Nil))))
=> (P PP (P 2 (P (P PP (P 4 (P (P PP (P 6 (P Nil Nil))) Nil))) Nil)))
+ (boit 1)
=> 100
+ (boit 2)
=> 200
+ (boit2 . 1)
=> 100
+ (boit2 . 2)
=> 200
gcc -std=c99 -g -o vor vor.c a.c spew.c mem.c
+ ((/. (x) x) Nil)
=> Nil
+ ((/. ((PP j k)) j) (PP 10 20))
=> 10
+ ((/. ((PP j k)) k) (PP 10 20))
=> 20
+ ((/. ((PP (PP j jj) (PP k r))) j) (PP (PP 10 100) (PP 20 30)))
=> 10
+ ((/. ((PP (PP j jj) (PP k r))) jj) (PP (PP 10 100) (PP 20 30)))
=> 100
+ ((/. ((PP (PP j jj) (PP k r))) k) (PP (PP 10 100) (PP 20 30)))
=> 20
+ ((/. ((PP (PP j jj) (PP k r))) r) (PP (PP 10 100) (PP 20 30)))
=> 30
+ ((/. ((PP j (PP k r))) j) (PP 10 (PP 20 30)))
=> 10
+ ((/. ((PP j (PP k r))) k) (PP 10 (PP 20 30)))
=> 20
+ ((/. ((PP j (PP k r))) r) (PP 10 (PP 20 30)))
=> 30
+ ((/. ((PP (PP j jj) q)) j) (PP (PP 10 100) 20))
=> 10
+ ((/. ((PP (PP j jj) q)) jj) (PP (PP 10 100) 20))
=> 100
+ ((/. ((PP (PP j jj) q)) q) (PP (PP 10 100) 20))
=> 20
+ ((/. (x) x) 1)
=> 1
+ ((/. (x) (x 2)) (/. x x))
=> (P 2 Nil)
+ ((/. (x) (x 2)) (/. (x) x))
=> 2
+ (/. (r) r)
=> ($ (/. b2800 (((if (pair? b2800)) (((if ((== (cdr b2800)) 'Nil)) (car b2800)) TOPFAIL)) TOPFAIL)) Nil)
+ ((/. (r) r) 3)
=> 3
+ ((+ 10) 20)
=> 30
+ ((+ ((/. (x) x) 2000)) 3000)
=> 5000
+ ((== 30) 30)
=> True
+ ((== 30) 40)
=> False
+ (((if True) 100) 200)
=> 100
+ (((if False) 100) 200)
=> 200
+ (tuct 10)
=> 10
+ ((+ 20) (tuct 10))
=> 30
+ ((- 40) 15)
=> 25
+ ((* 10) 20)
=> 200
+ (((if ((== 0) 3)) True) False)
=> False
+ (((if ((== 0) 0)) True) False)
=> True
+ ((/. (n) (((if ((== n) 3)) True) False)) 3)
=> False
+ ((/. (n) (((if ((== n) 3)) True) False)) 0)
=> False
+ (((if ((== 0) 0)) ((* 10) 20)) ((* 30) 40))
=> 200
+ (((if ((== 3) 0)) ((* 10) 20)) ((* 30) 40))
=> 1200
+ ((/. (n) (((if ((== n) 0)) 1) ((* n) ((- n) 1)))) 3)
=> 6
+ ((cons 1) 2)
=> (P 1 2)
+ (car ((cons 1) 2))
=> 1
+ (cdr ((cons 1) 2))
=> 2
+ (pair? ((cons 1) 2))
=> True
+ (pair? (car ((cons 1) 2)))
=> True
+ (pair? (cdr ((cons 1) 2)))
=> True
+ (double 10)
=> 20
+ (ones Nil)
=> Nil
+ (ones (PP 1 Nil))
=> (P (PP 1 1) Nil)
+ (ones (PP 1 (PP 2 (PP 3 Nil))))
=> (P (PP 1 1) (P (PP 1 2) (P (PP 1 3) Nil)))
+ ((map3 double) (PP 1 (PP 2 (PP 3 Nil))))
=> (PP 2 (PP 4 (PP 6 Nil)))
+ ((map3 double) 1)
=> 1
+ ((/. (a . b) a) 1 . 2)
=> 1
+ ((/. (a . b) b) 1 . 2)
=> 2
+ (voo 1 2 . 3)
=> 5
+ (/. x x)
=> ($ (/. b2880 ((/. x x) b2880)) Nil)
+ ((/. x x) 1)
=> (P 1 Nil)
+ ((/. (a . b) 1) 10 . 20)
=> 1
+ ((/. (a . b) a) 10 . 20)
=> 10
+ ((/. (a . b) b) 10 . 20)
=> 20
+ ((/. (a . b) ((+ a) b)) 10 . 20)
=> 30
+ (voo2 double 1 . Nil)
=> (P 20 Nil)
+ (voo2 double . Nil)
=> Nil
+ ((/. (f a . b) b) 1000 1 . 2)
=> 2
+ ((/. (a . b) a) 1 . 2)
=> 1
+ (map2 double (PP 1 (PP 2 (PP 3 Nil))))
=> (PP 2 (PP 4 (PP 6 Nil)))
+ ((/. 1 2) . 1)
=> 2
+ ((/. (1) 2) 1)
=> 2
+ ((/./. (/. 1 100) (/. 2 200)) . 1)
=> 100
+ ((/./. (/. 1 100) (/. 2 200)) . 2)
=> 200
+ ((/./. (/. (1) 100) (/. (2) 200)) 1)
=> 100
+ ((/./. (/. (1) 100) (/. (2) 200)) 2)
=> 200
+ ((/. (quote joe) 1) quote joe)
=> 1
+ ((/. ((quote joe)) 1) (quote joe))
=> 1
+ ((/. (joe) joe) 1)
=> 1
+ ((/. (joe) 1) joee)
=> 1
+ ((/. (1 2) 40) 1 2)
=> 40
+ ((/. (a b) ((+ a) b)) 1 2)
=> 3
+ 1
=> 1
+ (/. x x)
=> ($ (/. b3126 ((/. x x) b3126)) Nil)
+ ((/. x x) 1)
=> (P 1 Nil)
+ ((/. y ((/. x x) y)) 2)
=> (P (P 2 Nil) Nil)
+ (/. (a . b) a)
=> ($ (/. b3142 (((if (pair? b3142)) ((/. b (car b3142)) (cdr b3142))) TOPFAIL)) Nil)
+ ((/. (a . b) a) 1 . 2)
=> 1
+ ((/. (a . b) b) 1 . 2)
=> 2
+ (Foo 1 2)
=> (Foo 1 2)
+ ((/. ((Foo a b)) a) (Foo 10 20))
=> 10
+ ((/. ((Foo a b)) b) (Foo 10 20))
=> 20
+ ((/. ((Foo a b)) ((+ a) b)) (Foo 10 20))
=> 30
+ ((/. ((Foo (Bar a) b)) a) (Foo (Bar 10) 20))
=> 10
+ ((/. ((Foo (Bar a) b)) b) (Foo (Bar 10) 20))
=> 20
+ ((/. ((Foo (Bar a) b)) ((+ a) b)) (Foo (Bar 10) 20))
=> 30
+ ((/. ((Foo a b)) a) (Foo (Bar 10) 20))
=> (Bar 10)
+ ((/. ((Foo a b)) b) (Foo (Bar 10) 20))
=> 20
+ (ones2 Nil)
=> Nil
+ (ones2 (PP 1 Nil))
=> (P (PP 1 1) Nil)
+ (ones2 (PP 1 (PP 2 (PP 3 Nil))))
=> (P (PP 1 1) (P (PP 1 2) (P (PP 1 3) Nil)))
+ (voo20 1 2 . 3)
=> 5
+ (voo20 1 . 10)
=> 10
+ (voo22 double 1 . Nil)
=> (P 20 Nil)
+ (voo22 double . Nil)
=> Nil
+ (map22 double (PP 1 (PP 2 (PP 3 Nil))))
=> (PP 2 (PP 4 (PP 6 Nil)))
+ (boit 1)
=> 100
+ (boit 2)
=> 200
+ (boit2 . 1)
=> 100
+ (boit2 . 2)
=> 200
