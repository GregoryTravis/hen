+ ((/. a179 ((/. x x) a179)) 1) 
- (I 1) 
=> 1 

+ ((/. a182 ((/. x (x 2)) a182)) (/. a185 ((/. x x) a185))) 
- (((S (K ((S I) (K 2)))) I) I) 
=> 2 

+ (/. a188 ((/. r r) a188)) 
- I 
=> I 

+ ((/. a191 ((/. r r) a191)) 3) 
- (I 3) 
=> 3 

+ ((+ 10) 20) 
- ((+ 10) 20) 
=> 30 

+ ((+ ((/. a194 ((/. x x) a194)) 2000)) 3000) 
- ((+ (I 2000)) 3000) 
=> 5000 

+ ((== 30) 30) 
- ((== 30) 30) 
=> True 

+ ((== 30) 40) 
- ((== 30) 40) 
=> False 

+ (((if True) 100) 200) 
- (((if True) 100) 200) 
=> 100 

+ (((if False) 100) 200) 
- (((if False) 100) 200) 
=> 200 

+ (tuct 10) 
- (tuct 10) 
=> 10 

+ ((+ 20) (tuct 10)) 
- ((+ 20) (tuct 10)) 
=> 30 

+ ((- 40) 15) 
- ((- 40) 15) 
=> 25 

+ ((* 10) 20) 
- ((* 10) 20) 
=> 200 

+ (fact1 10) 
- (fact1 10) 
=> 3628800 

+ (((if ((== 0) 3)) True) False) 
- (((if ((== 0) 3)) True) False) 
=> False 

+ (((if ((== 0) 0)) True) False) 
- (((if ((== 0) 0)) True) False) 
=> True 

+ ((/. a197 ((/. n (((if ((== n) 3)) True) False)) a197)) 3) 
- (((S (K ((S ((S ((S (K if)) ((S ((S (K ==)) I)) (K 3)))) (K True))) (K False)))) I) 3) 
=> True 

+ ((/. a200 ((/. n (((if ((== n) 3)) True) False)) a200)) 0) 
- (((S (K ((S ((S ((S (K if)) ((S ((S (K ==)) I)) (K 3)))) (K True))) (K False)))) I) 0) 
=> False 

+ (((if ((== 0) 0)) ((* 10) 20)) ((* 30) 40)) 
- (((if ((== 0) 0)) ((* 10) 20)) ((* 30) 40)) 
=> 200 

+ (((if ((== 3) 0)) ((* 10) 20)) ((* 30) 40)) 
- (((if ((== 3) 0)) ((* 10) 20)) ((* 30) 40)) 
=> 1200 

+ ((/. a203 ((/. n (((if ((== n) 0)) 1) ((* n) ((- n) 1)))) a203)) 3) 
- (((S (K ((S ((S ((S (K if)) ((S ((S (K ==)) I)) (K 0)))) (K 1))) ((S ((S (K *)) I)) ((S ((S (K -)) I)) (K 1)))))) I) 3) 
=> 6 

+ ((cons 1) 2) 
- ((cons 1) 2) 
=> ((P 1) 2) 

+ (car ((cons 1) 2)) 
- (car ((cons 1) 2)) 
=> 1 

+ (cdr ((cons 1) 2)) 
- (cdr ((cons 1) 2)) 
=> 2 

+ (pair? ((cons 1) 2)) 
- (pair? ((cons 1) 2)) 
=> True 

+ (pair? (car ((cons 1) 2))) 
- (pair? (car ((cons 1) 2))) 
=> False 

+ (pair? (cdr ((cons 1) 2))) 
- (pair? (cdr ((cons 1) 2))) 
=> False 

+ (ones ((P 1) ((P 2) ((P 3) Nil)))) 
- (ones ((P 1) ((P 2) ((P 3) Nil)))) 
=> ((P 1) ((P 2) ((P 3) Nil))) 

+ (double 10) 
- (double 10) 
=> 20 

+ ((map double) ((P 1) ((P 2) ((P 3) Nil)))) 
- ((map double) ((P 1) ((P 2) ((P 3) Nil)))) 
=> ((P 2) ((P 4) ((P 6) Nil))) 

+ ((/. a206 ((/. a208 (((if (pair? a208)) (((/. a (/. a211 ((/. b a) a211))) (car a208)) (cdr a208))) ((/. x FAIL) a206))) a206)) ((P 1) 2)) 
- (((S ((S (K (S ((S ((S (K if)) ((S (K pair?)) I))) ((S ((S (K ((S ((S (K S)) ((S (K K)) ((S (K K)) I)))) (K I)))) ((S (K car)) I))) ((S (K cdr)) I)))))) ((S (K K)) ((S (K (K FAIL))) I)))) I) ((P 1) 2)) 
=> 1 

+ (voo ((P 1) ((P 2) 3))) 
- (voo ((P 1) ((P 2) 3))) 
=> 5 

+ (/. a214 ((/. x x) a214)) 
- I 
=> I 

+ ((/. a217 ((/. x x) a217)) 1) 
- (I 1) 
=> 1 

+ ((/. a220 ((/. a222 (((if (pair? a222)) (((/. a (/. a225 ((/. b 1) a225))) (car a222)) (cdr a222))) ((/. x FAIL) a220))) a220)) ((P 10) 20)) 
- (((S ((S (K (S ((S ((S (K if)) ((S (K pair?)) I))) ((S ((S (K (K ((S (K (K 1))) I)))) ((S (K car)) I))) ((S (K cdr)) I)))))) ((S (K K)) ((S (K (K FAIL))) I)))) I) ((P 10) 20)) 
=> 1 

+ ((/. a228 ((/. a230 (((if (pair? a230)) (((/. a (/. a233 ((/. b a) a233))) (car a230)) (cdr a230))) ((/. x FAIL) a228))) a228)) ((P 10) 20)) 
- (((S ((S (K (S ((S ((S (K if)) ((S (K pair?)) I))) ((S ((S (K ((S ((S (K S)) ((S (K K)) ((S (K K)) I)))) (K I)))) ((S (K car)) I))) ((S (K cdr)) I)))))) ((S (K K)) ((S (K (K FAIL))) I)))) I) ((P 10) 20)) 
=> 10 

+ ((/. a236 ((/. a238 (((if (pair? a238)) (((/. a (/. a241 ((/. b b) a241))) (car a238)) (cdr a238))) ((/. x FAIL) a236))) a236)) ((P 10) 20)) 
- (((S ((S (K (S ((S ((S (K if)) ((S (K pair?)) I))) ((S ((S (K (K I))) ((S (K car)) I))) ((S (K cdr)) I)))))) ((S (K K)) ((S (K (K FAIL))) I)))) I) ((P 10) 20)) 
=> 20 

+ ((/. a244 ((/. a246 (((if (pair? a246)) (((/. a (/. a249 ((/. b ((+ a) b)) a249))) (car a246)) (cdr a246))) ((/. x FAIL) a244))) a244)) ((P 10) 20)) 
- (((S ((S (K (S ((S ((S (K if)) ((S (K pair?)) I))) ((S ((S (K ((S ((S (K S)) ((S (K K)) ((S ((S (K S)) ((S (K K)) ((S (K +)) I)))) (K I))))) (K I)))) ((S (K car)) I))) ((S (K cdr)) I)))))) ((S (K K)) ((S (K (K FAIL))) I)))) I) ((P 10) 20)) 
=> 30 

+ (voo2 ((P double) ((P 1) Nil))) 
- (voo2 ((P double) ((P 1) Nil))) 
=> ((P 20) Nil) 

+ (voo2 ((P double) Nil)) 
- (voo2 ((P double) Nil)) 
=> Nil 

+ ((/. a252 ((/. a254 (((if (pair? a254)) (((/. f (/. a262 ((/. a255 (((if (pair? a255)) (((/. a265 ((/. a (/. a268 ((/. a258 ((/. a271 ((/. b b) a271)) a258)) a268))) a265)) (car a255)) (cdr a255))) ((/. a274 ((/. x FAIL) a274)) a252))) a262))) (car a254)) (cdr a254))) ((/. x FAIL) a252))) a252)) ((P 1000) ((P 1) 2))) 
- (((S ((S ((S (K S)) ((S (K (S ((S (K if)) ((S (K pair?)) I))))) ((S ((S (K S)) ((S ((S (K S)) ((S (K K)) ((S (K K)) ((S ((S (K S)) ((S (K K)) ((S (K (S ((S ((S (K if)) ((S (K pair?)) I))) ((S ((S (K ((S (K (K I))) I))) ((S (K car)) I))) ((S (K cdr)) I)))))) ((S (K K)) ((S (K ((S (K (K FAIL))) I))) I)))))) (K I)))))) (K ((S (K car)) I))))) (K ((S (K cdr)) I)))))) ((S (K K)) ((S (K (K FAIL))) I)))) I) ((P 1000) ((P 1) 2))) 
=> 2 

+ ((/. a277 ((/. a279 (((if (pair? a279)) (((/. a (/. a282 ((/. b a) a282))) (car a279)) (cdr a279))) ((/. x FAIL) a277))) a277)) ((P 1) 2)) 
- (((S ((S (K (S ((S ((S (K if)) ((S (K pair?)) I))) ((S ((S (K ((S ((S (K S)) ((S (K K)) ((S (K K)) I)))) (K I)))) ((S (K car)) I))) ((S (K cdr)) I)))))) ((S (K K)) ((S (K (K FAIL))) I)))) I) ((P 1) 2)) 
=> 1 

+ (map2 ((P double) ((P 1) ((P 2) ((P 3) Nil))))) 
- (map2 ((P double) ((P 1) ((P 2) ((P 3) Nil))))) 
=> ((P 2) ((P 4) ((P 6) Nil))) 

+ ((/. a285 ((/. a287 (((if ((== a287) 1)) 2) ((/. x FAIL) a285))) a285)) 1) 
- (((S ((S (K (S ((S ((S (K if)) ((S ((S (K ==)) I)) (K 1)))) (K 2))))) ((S (K K)) ((S (K (K FAIL))) I)))) I) 1) 
=> 2 

+ ((/. a288 ((/. a290 (((if ((== a290) 1)) 2) ((/. x FAIL) a288))) a288)) 2) 
- (((S ((S (K (S ((S ((S (K if)) ((S ((S (K ==)) I)) (K 1)))) (K 2))))) ((S (K K)) ((S (K (K FAIL))) I)))) I) 2) 
=> FAIL 

+ ((/. a291 ((/. a295 (((if ((== a295) 1)) 100) ((/. a292 ((/. a294 (((if ((== a294) 2)) 200) ((/. x FAIL) a292))) a292)) a291))) a291)) 1) 
- (((S ((S (K (S ((S ((S (K if)) ((S ((S (K ==)) I)) (K 1)))) (K 100))))) ((S (K K)) ((S (K ((S ((S (K (S ((S ((S (K if)) ((S ((S (K ==)) I)) (K 2)))) (K 200))))) ((S (K K)) ((S (K (K FAIL))) I)))) I))) I)))) I) 1) 
=> 100 

+ ((/. a296 ((/. a300 (((if ((== a300) 1)) 100) ((/. a297 ((/. a299 (((if ((== a299) 2)) 200) ((/. x FAIL) a297))) a297)) a296))) a296)) 2) 
- (((S ((S (K (S ((S ((S (K if)) ((S ((S (K ==)) I)) (K 1)))) (K 100))))) ((S (K K)) ((S (K ((S ((S (K (S ((S ((S (K if)) ((S ((S (K ==)) I)) (K 2)))) (K 200))))) ((S (K K)) ((S (K (K FAIL))) I)))) I))) I)))) I) 2) 
=> 200 

+ ((/. a301 ((/. a303 (((if ((== a303) 'Nil)) 1) ((/. x FAIL) a301))) a301)) 'Nil) 
- (((S ((S (K (S ((S ((S (K if)) ((S ((S (K ==)) I)) (K 'Nil)))) (K 1))))) ((S (K K)) ((S (K (K FAIL))) I)))) I) 'Nil) 
=> 1 

+ ((/. a304 ((/. a306 (((if ((== a306) 'Nil)) 1) ((/. x FAIL) a304))) a304)) 'Joe) 
- (((S ((S (K (S ((S ((S (K if)) ((S ((S (K ==)) I)) (K 'Nil)))) (K 1))))) ((S (K K)) ((S (K (K FAIL))) I)))) I) 'Joe) 
=> FAIL 

