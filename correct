+ (foo 10 20)
(Bar 20 20)

+ (foo 20 10)
(Bar 10 10)

+ (Foo 10 20)
(Foo 10 20)

+ (Bar 10 20)
(Bar 10 20)

+ (Foo 20 10)
(Foo 20 10)

+ (Bar 20 10)
(Bar 20 10)

+ (tak [1 2])
[(Harf 1 1) (Harf 2 2)]

+ (map yep [1 2])
[(Double 1 1) (Double 2 2)]

+ (append
  [1 2]
  [3 4])
[1 2 3 4]

+ (reverse [1 2])
[2 1]

+ (reverse [1 2 3 4])
[4 3 2 1]

+ (reverse
  (append
    [1 2]
    [3 4]))
[4 3 2 1]

+ (+ 3 4)
7

+ (- 3 4)
-1

+ (* 3 4)
12

+ (/ 3 4)
3/4

+ (== 3 4)
False

+ (!= 3 4)
True

+ (< 3 4)
True

+ (> 3 4)
False

+ (<= 3 4)
True

+ (>= 3 4)
False

+ (== 4 3)
False

+ (!= 4 3)
True

+ (< 4 3)
False

+ (> 4 3)
True

+ (<= 4 3)
False

+ (>= 4 3)
True

+ (== 4 4)
True

+ (!= 4 4)
False

+ (< 4 4)
False

+ (> 4 4)
False

+ (<= 4 4)
True

+ (>= 4 4)
True

+ (not False)
True

+ (not True)
False

+ (and True True)
True

+ (and False True)
False

+ (and True False)
False

+ (and False False)
False

+ (or True True)
True

+ (or False True)
True

+ (or True False)
True

+ (or False False)
False

+ (xor True False)
True

+ (xor False True)
True

+ (xor True True)
False

+ (xor False False)
False

+ (fact 10)
3628800

+ (fact2 10)
3628800

+ "a"
"a"

+ (read-file "tst-readee.ss")
[[1 2 3]]

+ (shew 5 5 6)
5
5
6

+ (map shew [5 5 6])
5
5
6
[NoResult NoResult NoResult]

+ (shew [4 5])
[4 5]

+ (grep blah [1 2 30 40 5])
[30 40]

+ (grep bluh [1 2 30 40 5])
[1 2 5]

+ (begin 5)
5

+ (begin 5 6)
6

+ (begin 5 6 7)
7

+ (begin 5 6 7 8)
8

+ (shew 5)
5

+ (shew 5 6)
5
6

+ (shew 5 6 7)
5
6
7

+ (shew 5 6 7 8)
5
6
7
8

+ (shew a-global)
10

+ (+ a-global a-global)
20

+ a-global
10

+ (guardo-a 10 10)
(Bar 10 10)

+ (guardo-b 10 50)
(Voo 50 10)

+ (guardo-c 10 10)
(Bar 10 10)

+ (guardo-c 10 20)
(Bic 20 20)

+ (jerk [1 . 2] 1 2)
10

+ (jerk [1 . 2] 2 1)
20

+ (jerku 1 1 2 3 3)
12

+ (jerku 10 1 2 3 3)
0

+ (jerku 1 1 2 3 30)
4

+ (jerku 10 1 2 3 30)
18

+ (jerku (Poo 34) (Poo 34) (G) (Lap 5) (Lap 6))
4

+ (jerku (Poo 34) (Poo 34) (G) (Lap 5) (Lap 5))
12

+ (figg 10 20)
(Blap 10 20)

+ (figg (Jerk) 20)
(Shoe (Jerk) 20)

+ (asldfih 10 20)
20

+ (asdfuae 10 20)
20

+ (match-descend (Var a) 10)
(Just [(Binding (Var a) 10)])

+ (match-descend (Pair (Var a) (Var b)) (Pair 30 40))
(Just
 [(Binding (Var a) 30) (Binding (Var b) 40)])

+ (match-descend (Pair (Var a) (Pair (Var b) (Var c))) (Pair 30 40))
(Fail)

+ (match-descend (Constant 10) (Constant 10))
(Just [])

+ (match-descend (Constant 10) (Constant 20))
(Fail)

+ (match-descend (Constant joe) (Constant joe))
(Just [])

+ (match-descend (Constant joe) (Constant blah))
(Fail)

+ (match-descend
  (Pair (Constant Food) (Pair (Var a) Nil))
  (Pair (Constant Food) (Pair 10 Nil)))
(Just [(Binding (Var a) 10)])

+ (uuf 1)
(Constant (Integer (Primitive 1)))

+ (match-descend (uuf 1) (uuf 1))
(Just [])

