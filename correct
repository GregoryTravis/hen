+ ((/. x x) 1) 
- ((/. a179 ((/. x x) a179)) 1) 
=> 1 

+ ((/. x (x 2)) (/. x x)) 
- ((/. a182 ((/. x (x 2)) a182)) (/. a185 ((/. x x) a185))) 
=> 2 

+ (/. r r) 
- (/. a188 ((/. r r) a188)) 
=> ($ (/. a188 ((/. r r) a188)) ()) 

+ ((/. r r) 3) 
- ((/. a191 ((/. r r) a191)) 3) 
=> 3 

+ ((+ 10) 20) 
- ((+ 10) 20) 
=> 30 

+ ((+ ((/. x x) 2000)) 3000) 
- ((+ ((/. a194 ((/. x x) a194)) 2000)) 3000) 
=> 5000 

+ ((== 30) 30) 
- ((== 30) 30) 
=> True 

+ ((== 30) 40) 
- ((== 30) 40) 
=> False 

+ (((if True) 100) 200) 
- (((if True) 100) 200) 
=> 100 

+ (((if False) 100) 200) 
- (((if False) 100) 200) 
=> 200 

+ (tuct 10) 
- (tuct 10) 
=> 10 

+ ((+ 20) (tuct 10)) 
- ((+ 20) (tuct 10)) 
=> 30 

+ ((- 40) 15) 
- ((- 40) 15) 
=> 25 

+ ((* 10) 20) 
- ((* 10) 20) 
=> 200 

+ (fact1 10) 
- (fact1 10) 
=> 3628800 

+ (((if ((== 0) 3)) True) False) 
- (((if ((== 0) 3)) True) False) 
=> False 

+ (((if ((== 0) 0)) True) False) 
- (((if ((== 0) 0)) True) False) 
=> True 

+ ((/. n (((if ((== n) 3)) True) False)) 3) 
- ((/. a197 ((/. n (((if ((== n) 3)) True) False)) a197)) 3) 
=> True 

+ ((/. n (((if ((== n) 3)) True) False)) 0) 
- ((/. a200 ((/. n (((if ((== n) 3)) True) False)) a200)) 0) 
=> False 

+ (((if ((== 0) 0)) ((* 10) 20)) ((* 30) 40)) 
- (((if ((== 0) 0)) ((* 10) 20)) ((* 30) 40)) 
=> 200 

+ (((if ((== 3) 0)) ((* 10) 20)) ((* 30) 40)) 
- (((if ((== 3) 0)) ((* 10) 20)) ((* 30) 40)) 
=> 1200 

+ ((/. n (((if ((== n) 0)) 1) ((* n) ((- n) 1)))) 3) 
- ((/. a203 ((/. n (((if ((== n) 0)) 1) ((* n) ((- n) 1)))) a203)) 3) 
=> 6 

+ ((cons 1) 2) 
- ((cons 1) 2) 
=> ((P 1) 2) 

+ (car ((cons 1) 2)) 
- (car ((cons 1) 2)) 
=> 1 

+ (cdr ((cons 1) 2)) 
- (cdr ((cons 1) 2)) 
=> 2 

+ (pair? ((cons 1) 2)) 
- (pair? ((cons 1) 2)) 
=> True 

+ (pair? (car ((cons 1) 2))) 
- (pair? (car ((cons 1) 2))) 
=> False 

+ (pair? (cdr ((cons 1) 2))) 
- (pair? (cdr ((cons 1) 2))) 
=> False 

+ (ones ((P 1) ((P 2) ((P 3) Nil)))) 
- (ones ((P 1) ((P 2) ((P 3) Nil)))) 
=> ((P 1) ((P 2) ((P 3) Nil))) 

+ (double 10) 
- (double 10) 
=> 20 

+ ((map double) ((P 1) ((P 2) ((P 3) Nil)))) 
- ((map double) ((P 1) ((P 2) ((P 3) Nil)))) 
=> ((P 2) ((P 4) ((P 6) Nil))) 

+ ((/. ((P a) b) a) ((P 1) 2)) 
- ((/. a206 ((/. a208 (((if (pair? a208)) (((/. a (/. a211 ((/. b a) a211))) (car a208)) (cdr a208))) ((/. x FAIL) a206))) a206)) ((P 1) 2)) 
=> 1 

+ (voo ((P 1) ((P 2) 3))) 
- (voo ((P 1) ((P 2) 3))) 
=> 5 

+ (/. x x) 
- (/. a214 ((/. x x) a214)) 
=> ($ (/. a214 ((/. x x) a214)) ()) 

+ ((/. x x) 1) 
- ((/. a217 ((/. x x) a217)) 1) 
=> 1 

+ ((/. ((P a) b) 1) ((P 10) 20)) 
- ((/. a220 ((/. a222 (((if (pair? a222)) (((/. a (/. a225 ((/. b 1) a225))) (car a222)) (cdr a222))) ((/. x FAIL) a220))) a220)) ((P 10) 20)) 
=> 1 

+ ((/. ((P a) b) a) ((P 10) 20)) 
- ((/. a228 ((/. a230 (((if (pair? a230)) (((/. a (/. a233 ((/. b a) a233))) (car a230)) (cdr a230))) ((/. x FAIL) a228))) a228)) ((P 10) 20)) 
=> 10 

+ ((/. ((P a) b) b) ((P 10) 20)) 
- ((/. a236 ((/. a238 (((if (pair? a238)) (((/. a (/. a241 ((/. b b) a241))) (car a238)) (cdr a238))) ((/. x FAIL) a236))) a236)) ((P 10) 20)) 
=> 20 

+ ((/. ((P a) b) ((+ a) b)) ((P 10) 20)) 
- ((/. a244 ((/. a246 (((if (pair? a246)) (((/. a (/. a249 ((/. b ((+ a) b)) a249))) (car a246)) (cdr a246))) ((/. x FAIL) a244))) a244)) ((P 10) 20)) 
=> 30 

+ (voo2 ((P double) ((P 1) Nil))) 
- (voo2 ((P double) ((P 1) Nil))) 
=> ((P 20) Nil) 

+ (voo2 ((P double) Nil)) 
- (voo2 ((P double) Nil)) 
=> Nil 

+ ((/. ((P f) ((P a) b)) b) ((P 1000) ((P 1) 2))) 
- ((/. a252 ((/. a254 (((if (pair? a254)) (((/. f (/. a262 ((/. a255 (((if (pair? a255)) (((/. a265 ((/. a (/. a268 ((/. a258 ((/. a271 ((/. b b) a271)) a258)) a268))) a265)) (car a255)) (cdr a255))) ((/. a274 ((/. x FAIL) a274)) a252))) a262))) (car a254)) (cdr a254))) ((/. x FAIL) a252))) a252)) ((P 1000) ((P 1) 2))) 
=> 2 

+ ((/. ((P a) b) a) ((P 1) 2)) 
- ((/. a277 ((/. a279 (((if (pair? a279)) (((/. a (/. a282 ((/. b a) a282))) (car a279)) (cdr a279))) ((/. x FAIL) a277))) a277)) ((P 1) 2)) 
=> 1 

+ (map2 ((P double) ((P 1) ((P 2) ((P 3) Nil))))) 
- (map2 ((P double) ((P 1) ((P 2) ((P 3) Nil))))) 
=> ((P 2) ((P 4) ((P 6) Nil))) 

+ ((/. 1 2) 1) 
- ((/. a285 ((/. a287 (((if ((== a287) 1)) 2) ((/. x FAIL) a285))) a285)) 1) 
=> 2 

+ ((/./. (/. 1 100) (/. 2 200)) 1) 
- ((/. a288 ((/. a292 (((if ((== a292) 1)) 100) ((/. a289 ((/. a291 (((if ((== a291) 2)) 200) ((/. x FAIL) a289))) a289)) a288))) a288)) 1) 
=> 100 

+ ((/./. (/. 1 100) (/. 2 200)) 2) 
- ((/. a293 ((/. a297 (((if ((== a297) 1)) 100) ((/. a294 ((/. a296 (((if ((== a296) 2)) 200) ((/. x FAIL) a294))) a294)) a293))) a293)) 2) 
=> 200 

+ ((/. 'Nil 1) 'Nil) 
- ((/. a298 ((/. a300 (((if ((== a300) 'Nil)) 1) ((/. x FAIL) a298))) a298)) 'Nil) 
=> 1 

+ ((/. ((P 1) ((P 2) 'Nil)) 40) ((P 1) ((P 2) 'Nil))) 
- ((/. a301 ((/. a303 (((if (pair? a303)) (((/. a313 (((if ((== a313) 1)) (/. a314 ((/. a304 (((if (pair? a304)) (((/. a317 ((/. a306 (((if ((== a306) 2)) (/. a320 ((/. a307 ((/. a323 ((/. a305 (((if ((== a305) 'Nil)) 40) ((/. a326 ((/. a310 ((/. a329 ((/. x FAIL) a329)) a310)) a326)) a301))) a323)) a307)) a320))) ((/. a332 ((/. x FAIL) a332)) a301))) a317)) (car a304)) (cdr a304))) ((/. a335 ((/. x FAIL) a335)) a301))) a314))) ((/. x FAIL) a301))) (car a303)) (cdr a303))) ((/. x FAIL) a301))) a301)) ((P 1) ((P 2) 'Nil))) 
=> 40 

+ ((/. ((P a) ((P b) 'Nil)) ((+ a) b)) ((P 1) ((P 2) 'Nil))) 
- ((/. a338 ((/. a340 (((if (pair? a340)) (((/. a (/. a351 ((/. a341 (((if (pair? a341)) (((/. a354 ((/. b (/. a357 ((/. a344 ((/. a360 ((/. a342 (((if ((== a342) 'Nil)) ((+ a) b)) ((/. a363 ((/. a347 ((/. a366 ((/. x FAIL) a366)) a347)) a363)) a338))) a360)) a344)) a357))) a354)) (car a341)) (cdr a341))) ((/. a369 ((/. x FAIL) a369)) a338))) a351))) (car a340)) (cdr a340))) ((/. x FAIL) a338))) a338)) ((P 1) ((P 2) 'Nil))) 
=> 3 

+ 1 
- 1 
=> 1 

+ (/. x x) 
- (/. a372 ((/. x x) a372)) 
=> ($ (/. a372 ((/. x x) a372)) ()) 

+ ((/. x x) 1) 
- ((/. a375 ((/. x x) a375)) 1) 
=> 1 

+ ((/. y ((/. x x) y)) 2) 
- ((/. a378 ((/. y ((/. a381 ((/. x x) a381)) y)) a378)) 2) 
=> 2 

+ (/. ((P a) b) a) 
- (/. a384 ((/. a386 (((if (pair? a386)) (((/. a (/. a389 ((/. b a) a389))) (car a386)) (cdr a386))) ((/. x FAIL) a384))) a384)) 
=> ($ (/. a384 ((/. a386 (((if (pair? a386)) (((/. a (/. a389 ((/. b a) a389))) (car a386)) (cdr a386))) ((/. x FAIL) a384))) a384)) ()) 

+ ((/. ((P a) b) a) ((P 1) 2)) 
- ((/. a392 ((/. a394 (((if (pair? a394)) (((/. a (/. a397 ((/. b a) a397))) (car a394)) (cdr a394))) ((/. x FAIL) a392))) a392)) ((P 1) 2)) 
=> 1 

+ ((/. ((P a) b) b) ((P 1) 2)) 
- ((/. a400 ((/. a402 (((if (pair? a402)) (((/. a (/. a405 ((/. b b) a405))) (car a402)) (cdr a402))) ((/. x FAIL) a400))) a400)) ((P 1) 2)) 
=> 2 

